CREATE TABLE ADVISOR(
advisorID INT NOT NULL AUTO_INCREMENT,
email VARCHAR(100) NOT NULL,
lastName CHAR(25) NOT NULL,
firstName CHAR(25) NOT NULL,
CONSTRAINT A_PK PRIMARY KEY(advisorID) #Declare attribute a primary key
); 

CREATE TABLE STUDENT(
studentID INT NOT NULL AUTO_INCREMENT,
email VARCHAR(100) NOT NULL,
lastName CHAR(25) NOT NULL,
firstName CHAR(25) NOT NULL,
dormName CHAR(25) NOT NULL,
dormPhone CHAR(12) NOT NULL,
dormRoom INT NOT NULL,
CONSTRAINT S_PK PRIMARY KEY(studentID) #Declare attribute a primary key
);

CREATE TABLE ALUMNI(
alumniEmail VARCHAR(100) NOT NULL UNIQUE,
lastName CHAR(25) NOT NULL,
firstName CHAR(25) NOT NULL,
formerStudentID INT NULL,
CONSTRAINT A_PK PRIMARY KEY(alumniEmail) #Declare attribute a primary key
);

CREATE TABLE COMPANY(
companyPhone CHAR(12) NOT NULL UNIQUE,
companyName CHAR(25) NOT NULL,
companyAddress CHAR(40) NOT NULL,
companyCity CHAR(40) NOT NULL,
companyState CHAR(2) NOT NULL,
companyZIP CHAR(5) NOT NULL,
CONSTRAINT C_PK PRIMARY KEY(companyPhone)

);

CREATE TABLE MENTOR(
mentorEmail VARCHAR(100) NOT NULL UNIQUE,
lastName CHAR(25) NOT NULL,
firstName CHAR(25) NOT NULL,
alumniEmail VARCHAR(100) NULL UNIQUE,
companyPhone CHAR(12) NOT NULL UNIQUE,
CONSTRAINT M_PK PRIMARY KEY(mentorEmail),
CONSTRAINT M_AE_FK FOREIGN KEY(alumniEmail) REFERENCES ALUMNI(alumniEmail)
ON UPDATE CASCADE
ON DELETE NO ACTION,
CONSTRAINT M_CP_FK FOREIGN KEY(companyPhone) REFERENCES COMPANY(companyPhone)
ON UPDATE CASCADE
ON DELETE NO ACTION
);

CREATE TABLE ADVISOR_STUDENT_DATE(
advisorID INT NOT NULL,
studentID INT NOT NULL,
startDate DATE NULL,
endDate DATE NULL,
CONSTRAINT A_S_D_PK PRIMARY KEY(advisorID, studentID),
CONSTRAINT A_S_D_AID_FK FOREIGN KEY(advisorID) REFERENCES ADVISOR(advisorID)
ON UPDATE CASCADE
ON DELETE NO ACTION,
CONSTRAINT A_S_D_SID_FK FOREIGN KEY(studentID) REFERENCES STUDENT(studentID) 
ON UPDATE CASCADE
ON DELETE NO ACTION
);

CREATE TABLE ADVISOR_MENTOR_DATE(
advisorID INT NOT NULL,
mentorEmail VARCHAR(100) NOT NULL,
startDate DATE NULL,
endDate DATE NULL,
CONSTRAINT A_M_D_PK PRIMARY KEY(advisorID, mentorEmail),
CONSTRAINT A_M_D_AID_FK FOREIGN KEY(advisorID) REFERENCES ADVISOR(advisorID)
ON UPDATE CASCADE
ON DELETE NO ACTION,
CONSTRAINT A_M_D_ME_FK FOREIGN KEY(mentorEmail) REFERENCES MENTOR(mentorEmail)
ON UPDATE CASCADE
ON DELETE NO ACTION
);

CREATE TABLE MENTOR_STUDENT_DATE(
mentorEmail VARCHAR(100) NOT NULL,
studentID INT NOT NULL,
startDate DATE NULL,
endDate DATE NULL,
CONSTRAINT M_S_D_PK PRIMARY KEY(mentorEmail, studentID),
CONSTRAINT M_S_D_AID_FK FOREIGN KEY(mentorEmail) REFERENCES MENTOR(mentorEmail),
CONSTRAINT M_S_D_SID_FK FOREIGN KEY(studentID) REFERENCES STUDENT(studentID)
);

CREATE TABLE ALUMNI_HOME(
alumniEmail VARCHAR(100) NOT NULL,
homeAddress CHAR(40) NOT NULL,
homeCity CHAR(40) NOT NULL,
homeState CHAR(2) NOT NULL,
homeZIP CHAR(5) NOT NULL,
homePhone CHAR(12) NOT NULL,
CONSTRAINT A_H_PK PRIMARY KEY(alumniEmail)
);


CREATE TABLE GRADUATION(
studentID INT NOT NULL AUTO_INCREMENT,
studentDegree CHAR(50) NOT NULL,
dateEnrolled DATE NOT NULL,
dateGraduated DATE NULL,
CONSTRAINT G_PK PRIMARY KEY(studentID, studentDegree),
CONSTRAINT G_SID_FK FOREIGN KEY(studentID) REFERENCES STUDENT(studentID)
ON UPDATE NO ACTION
ON DELETE NO ACTION
);

CREATE TABLE DEPARTMENT(
advisorID INT NOT NULL,
departmentName CHAR(20) NOT NULL,
officeBuildingName CHAR(20) NOT NULL,
officeRoom INT NOT NULL,
officePhone CHAR(12) NOT NULL,
CONSTRAINT D_PK PRIMARY KEY(advisorID, departmentName),
CONSTRAINT D_AID_FK FOREIGN KEY(advisorID) REFERENCES ADVISOR(advisorID)
ON UPDATE CASCADE
ON DELETE NO ACTION
);






